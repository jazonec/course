apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "telegram-bot.fullname" . }}
  labels:
    {{- include "telegram-bot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "telegram-bot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "telegram-bot.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      initContainers:
        - name: liquibase
          image: "{{ .Values.image_liquibase.repository }}:{{ .Values.image_liquibase.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image_liquibase.pullPolicy }}
          args: [
            "--changeLogFile=initial.postgres.yaml",
            "--url=jdbc:postgresql://$(DB_HOST):5432/$(POSTGRES_DB)",
            "update"
          ]
          env:
            - name: LIQUIBASE_COMMAND_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_USER
            - name: LIQUIBASE_COMMAND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_DB
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: DB_HOST
      containers:
        - name: telegram-bot
          image: "{{ .Values.image_bot.repository }}:{{ .Values.image_bot.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image_bot.pullPolicy }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_PASSWORD
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: DB_PORT
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_DB
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: DB_HOST
            - name: OAIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: OAIKEY
            - name: BOTKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: BOTKEY
            - name: OAIMODEL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: OAIMODEL
            - name: OAIDALLEMODEL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: OAIDALLEMODEL
