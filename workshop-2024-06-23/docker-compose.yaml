volumes:
  bot_log_share: {}
  loki_store_data: {}
  postgres_data: {}

services:
  telegram-bot:
    build: ./telegram-bot
    env_file:
      - ./telegram-bot/.env
    volumes:
      - bot_log_share:/app/logs

  loki-local:
    image: grafana/loki:2.9.8
    volumes:
      - loki_store_data:/loki

  grafana:
    image: grafana/grafana:11.1.0
    ports:
      - 3000:3000
    volumes:
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards

  promtail:
    image: grafana/promtail:2.9.8
    volumes:
      - bot_log_share:/logs
      - ./promtail/config.yml:/etc/promtail/config.yml
    command:
      - -config.file=/etc/promtail/config.yml

  liquibase:
    depends_on:
      postgres:
        condition: service_healthy
    build: ./liquibase
    command: [
      "--changeLogFile=initial.postgres.yaml",
      "--url=jdbc:postgresql://${DB_HOST}:${DB_INTERNAL_PORT}/${POSTGRES_DB}",
      "update"
    ]
    environment:
      LIQUIBASE_COMMAND_USERNAME: ${POSTGRES_USER}
      LIQUIBASE_COMMAND_PASSWORD: ${POSTGRES_PASSWORD}

  postgres:
    image: postgres:16.3
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "${DB_EXTERNAL_PORT}:${DB_INTERNAL_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
